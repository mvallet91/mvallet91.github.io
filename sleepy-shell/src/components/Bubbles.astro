---
// Create an array of 20 bubble objects with random properties
const bubbles = Array.from({ length: 20 }, (_, i) => ({
  id: i,
  left: Math.random() * 100,    // Random horizontal position (0-100%)
  size: Math.random() * 15 + 8, // Random size (8-23px)
  duration: Math.random() * 15 + 10, // Random animation duration (15-30s)
  delay: Math.random() * -30    // Random start delay (0 to -30s) for staggered effect
}));
---

{/* Container that covers the whole viewport */}
<div class="fixed inset-0 -z-10 overflow-hidden pointer-events-none">
  {/* Map through each bubble and create a floating element */}
  {bubbles.map(bubble => (
    <div
      class="absolute rounded-full backdrop-blur-sm"
      style={`
        left: ${bubble.left}%;           /* Horizontal position */
        bottom: -${bubble.size}px;       /* Start just below viewport */
        width: ${bubble.size}px;         /* Bubble width */
        height: ${bubble.size}px;        /* Bubble height */
        animation: float ${bubble.duration}s ${bubble.delay}s linear infinite;  /* Apply floating animation */
        background: radial-gradient(
          circle at 30% 30%,
          rgba(255, 255, 255, 0.3),
          rgba(255, 255, 255, 0.1) 30%,
          rgba(0, 124, 240, 0.05) 60%,
          rgba(0, 223, 216, 0.02)
        );  
        box-shadow: 
          inset 0 0 6px rgba(255, 255, 255, 0.4),
          inset 2px 2px 4px rgba(255, 255, 255, 0.3),
          0 0 8px rgba(0, 124, 240, 0.1);
        border: 0.5px solid rgba(255, 255, 255, 0.2);
      `}
    />
  ))}
</div>

<style>
  @keyframes float {
    0% {
      transform: translateY(0) rotate(0deg) scale(1);
      opacity: 0;
    }
    10% {
      opacity: 1;
      transform: translateY(-10vh) rotate(45deg) scale(1.1);
    }
    45% {
      transform: translateY(-45vh) rotate(180deg) scale(1);
    }
    90% {
      opacity: 1;
      transform: translateY(-90vh) rotate(315deg) scale(1.1);
    }
    100% {
      transform: translateY(-100vh) rotate(360deg) scale(1);
      opacity: 0;
    }
  }
</style>